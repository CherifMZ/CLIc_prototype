name: CI-Build

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
  schedule:
    - cron: '0 1 * * *'

jobs:

  build:
    
    name: ${{ matrix.os }}-${{ matrix.cxx }}-${{ matrix.buildtype }}-and-test
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      max-parallel: 8
      matrix:
        name: [ubuntu-gcc, ubuntu-clang, macos-clang, windows-msvc]
        buildtype: [Debug, Release]
        include:
          - name: windows-msvc
            os: windows-latest
            cxx: cl.exe
            cc: cl.exe
            triplet: x64-windows
            packages: >
              opencl 
          - name: ubuntu-gcc
            os: ubuntu-latest
            cxx: g++
            cc: gcc
            triplet: x64-linux
            packages: >
              opencl
          - name: ubuntu-clang
            os: ubuntu-latest
            cxx: clang++
            cc: clang
            triplet: x64-linux
            packages: >
              opencl
          - name: macos-clang
            os: macos-latest
            cxx: clang++
            cc: clang
            triplet: x64-osx
            packages: >
              opencl

    steps:

      - name: Checkout
        uses: actions/checkout@v2
        with:
          submodules: true 
      
      - name: Install packages [vcpkg]
        uses: lukka/run-vcpkg@main
        with:
          vcpkgArguments: ${{ matrix.packages }}
          vcpkgDirectory: ${{ runner.workspace }}/vcpkg/
          vcpkgTriplet: ${{ matrix.triplet }}
          vcpkgGitCommitId: ec6fe06e8da05a8157dc8581fa96b36b571c1bd5 

      - name: Cmake [vcpkg]
        uses: lukka/run-cmake@main
        with:
          buildDirectory: ${{ runner.workspace }}/build
          cmakeBuildType: ${{ matrix.buildtype }}
          cmakeGenerator: 'Ninja'  
          cmakeListsOrSettingsJson: 'CMakeListsTxtBasic'
          cmakeListsTxtPath: '${{ github.workspace }}/CMakeLists.txt'
          useVcpkgToolchainFile: true


