name: CI-Coverage

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ closed ]

jobs:

  build:
    
    name: ${{ matrix.os }}-${{ matrix.cxx }}-${{ matrix.buildtype }}-test-coverage
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      max-parallel: 8
      matrix:
        name: [ubuntu-gcc]
        buildtype: [Debug]
        include:
          - name: ubuntu-gcc
            os: ubuntu-latest
            cxx: g++
            cc: gcc
            triplet: x64-linux

    steps:

      - name: Checkout
        uses: actions/checkout@v2
        with:
          submodules: true 

      - name: Install cmake
        uses: lukka/get-cmake@latest

      - name: Set Environment vars
        run: |
          echo "CXX=${{ matrix.cxx }}" >> $GITHUB_ENV
          echo "CC=${{ matrix.cc }}" >> $GITHUB_ENV
      
      - name: Install packages
        shell: bash
        run: |
          sudo apt-get update -y
          sudo apt-get install build-essential -y
          sudo apt-get install python3.8 -y
          sudo apt-get install opencl-headers ocl-icd-opencl-dev lcov gcovr -y

      # - name: Run CMake with Ninja
      #   uses: lukka/run-cmake@main
      #   id: runcmake
      #   with:
      #     buildDirectory: ${{ runner.workspace }}/build
      #     cmakeBuildType: ${{ matrix.buildtype }}
      #     cmakeGenerator: 'Ninja'  
      #     cmakeListsOrSettingsJson: 'CMakeListsTxtBasic'
      #     cmakeListsTxtPath: '${{ github.workspace }}/CMakeLists.txt'
      #     useVcpkgToolchainFile: true
      #     buildWithCMakeArgs: '-- -v'
      #     cmakeAppendedArgs: '-DBUILD_CODE_COVERAGE=ON'

      - name: Run CMake
        shell: bash
        run: |
          cmake -S ${{ github.workspace }} -B ${{ runner.workspace }}/build -DCMAKE_BUILD_TYPE=Debug -DBUILD_CODE_COVERAGE=ON
          cd ${{ runner.workspace }}/build && make

      - name: Run Coverage analysis
        working-directory: ${{ runner.workspace }}/build
        shell: bash
        run: |
          cd ${{ runner.workspace }}/build
          make coverage

      - name: Code Coverage
        uses: codecov/codecov-action@v1
        with:
          token: ${{ secrets.CODECOV_TOKEN }} # not required for public repos
          files: ${{ runner.workspace }}/build/coverage.xml
          name: CLIc_coverage # optional
          fail_ci_if_error: true # optional (default = false)
          verbose: true # optional (default = false)
